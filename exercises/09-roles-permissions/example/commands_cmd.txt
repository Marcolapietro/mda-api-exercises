REM 1. Registrar un usuario admin
curl -X POST -H "Content-Type: application/json" -d "{\"username\":\"admin\",\"password\":\"admin123\",\"role\":\"admin\"}" http://127.0.0.1:5000/register

REM 2. Registrar un estudiante
curl -X POST -H "Content-Type: application/json" -d "{\"username\":\"student1\",\"password\":\"pass123\",\"role\":\"student\"}" http://127.0.0.1:5000/register

REM 3. Login como admin (guardar el token que devuelve)
curl -X POST -H "Content-Type: application/json" --user admin:admin123 http://127.0.0.1:5000/login

REM 4. Login como estudiante (guardar el token que devuelve)
curl -X POST -H "Content-Type: application/json" --user student1:pass123 http://127.0.0.1:5000/login

REM 5. Usar el admin dashboard (reemplazar TOKEN_ADMIN con el token obtenido)
curl -X GET -H "Authorization: Bearer TOKEN_ADMIN" http://127.0.0.1:5000/admin/dashboard

REM 6. Intentar acceder al admin dashboard con usuario estudiante (reemplazar TOKEN_STUDENT)
curl -X GET -H "Authorization: Bearer TOKEN_STUDENT" http://127.0.0.1:5000/admin/dashboard

REM 7. Acceder a datos de estudiante
curl -X GET -H "Authorization: Bearer TOKEN_STUDENT" http://127.0.0.1:5000/student/data

REM 8. Ver lista de usuarios (como admin)
curl -X GET -H "Authorization: Bearer TOKEN_ADMIN" http://127.0.0.1:5000/usuarios

REM 9. Ver lista de usuarios con paginaci√≥n
curl -X GET -H "Authorization: Bearer TOKEN_ADMIN" "http://127.0.0.1:5000/usuarios?page=1&per_page=5"

REM 10. Crear nuevo usuario (como admin)
curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer TOKEN_ADMIN" -d "{\"username\":\"student2\",\"password\":\"pass456\",\"role\":\"student\"}" http://127.0.0.1:5000/usuarios

REM 11. Actualizar usuario (como admin)
curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer TOKEN_ADMIN" -d "{\"password\":\"newpass\"}" http://127.0.0.1:5000/usuarios/student1

REM 12. Eliminar usuario (como admin)
curl -X DELETE -H "Authorization: Bearer TOKEN_ADMIN" http://127.0.0.1:5000/usuarios/student2